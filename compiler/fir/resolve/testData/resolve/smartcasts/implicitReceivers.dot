digraph implicitReceivers_kt {
  graph [splines=ortho nodesep=3]
  node [shape=box penwidth=2]
  edge [penwidth=2]

  subgraph cluster_0 {
    color=red
    0 [label="Enter function <init>" style="filled" fillcolor=red];
    1 [label="Exit function <init>" style="filled" fillcolor=red];
  }

  0 -> {1};

  subgraph cluster_1 {
    color=red
    2 [label="Enter function foo" style="filled" fillcolor=red];
    3 [label="Exit function foo" style="filled" fillcolor=red];
  }

  2 -> {3};

  subgraph cluster_2 {
    color=red
    4 [label="Enter function with" style="filled" fillcolor=red];
    5 [label="Exit function with" style="filled" fillcolor=red];
  }

  4 -> {5};

  subgraph cluster_3 {
    color=red
    6 [label="Enter function test_1" style="filled" fillcolor=red];
    subgraph cluster_4 {
      color=blue
      7 [label="Enter when"];
      subgraph cluster_5 {
        color=blue
        8 [label="Enter when branch condition "];
        9 [label="Access variable this@R|/test_1|"];
        10 [label="Type operator: this is A"];
        11 [label="Exit when branch condition"];
      }
      subgraph cluster_6 {
        color=blue
        12 [label="Enter when branch condition else"];
        13 [label="Exit when branch condition"];
      }
      14 [label="Enter when branch result"];
      subgraph cluster_7 {
        color=blue
        15 [label="Enter block"];
        16 [label="Access variable this@R|/test_1|"];
        17 [label="Function call: this@R|/test_1|.<Unresolved name: foo>#()"];
        18 [label="Function call: <Unresolved name: foo>#()"];
        19 [label="Exit block"];
      }
      20 [label="Exit when branch result"];
      21 [label="Enter when branch result"];
      subgraph cluster_8 {
        color=blue
        22 [label="Enter block"];
        23 [label="Access variable this@R|/test_1|"];
        24 [label="Function call: this@R|/test_1|.R|/A.foo|()"];
        25 [label="Function call: this@R|/A|.R|/A.foo|()"];
        26 [label="Exit block"];
      }
      27 [label="Exit when branch result"];
      28 [label="Exit when"];
    }
    29 [label="Access variable this@R|/test_1|"];
    30 [label="Function call: this@R|/test_1|.<Unresolved name: foo>#()"];
    31 [label="Function call: <Unresolved name: foo>#()"];
    32 [label="Exit function test_1" style="filled" fillcolor=red];
  }

  6 -> {7};
  7 -> {8};
  8 -> {9};
  9 -> {10};
  10 -> {11};
  11 -> {21 12};
  12 -> {13};
  13 -> {14};
  14 -> {15};
  15 -> {16};
  16 -> {17};
  17 -> {18};
  18 -> {19};
  19 -> {20};
  20 -> {28};
  21 -> {22};
  22 -> {23};
  23 -> {24};
  24 -> {25};
  25 -> {26};
  26 -> {27};
  27 -> {28};
  28 -> {29};
  29 -> {30};
  30 -> {31};
  31 -> {32};

  subgraph cluster_9 {
    color=red
    33 [label="Enter function test_2" style="filled" fillcolor=red];
    subgraph cluster_10 {
      color=blue
      34 [label="Enter when"];
      subgraph cluster_11 {
        color=blue
        35 [label="Enter when branch condition "];
        36 [label="Access variable this@R|/test_2|"];
        37 [label="Type operator: this !is A"];
        38 [label="Exit when branch condition"];
      }
      subgraph cluster_12 {
        color=blue
        39 [label="Enter when branch condition else"];
        40 [label="Exit when branch condition"];
      }
      41 [label="Enter when branch result"];
      subgraph cluster_13 {
        color=blue
        42 [label="Enter block"];
        43 [label="Access variable this@R|/test_2|"];
        44 [label="Function call: this@R|/test_2|.R|/A.foo|()"];
        45 [label="Function call: this@R|/A|.R|/A.foo|()"];
        46 [label="Exit block"];
      }
      47 [label="Exit when branch result"];
      48 [label="Enter when branch result"];
      subgraph cluster_14 {
        color=blue
        49 [label="Enter block"];
        50 [label="Access variable this@R|/test_2|"];
        51 [label="Function call: this@R|/test_2|.<Unresolved name: foo>#()"];
        52 [label="Function call: <Unresolved name: foo>#()"];
        53 [label="Exit block"];
      }
      54 [label="Exit when branch result"];
      55 [label="Exit when"];
    }
    56 [label="Access variable this@R|/test_2|"];
    57 [label="Function call: this@R|/test_2|.<Unresolved name: foo>#()"];
    58 [label="Function call: <Unresolved name: foo>#()"];
    59 [label="Exit function test_2" style="filled" fillcolor=red];
  }

  33 -> {34};
  34 -> {35};
  35 -> {36};
  36 -> {37};
  37 -> {38};
  38 -> {48 39};
  39 -> {40};
  40 -> {41};
  41 -> {42};
  42 -> {43};
  43 -> {44};
  44 -> {45};
  45 -> {46};
  46 -> {47};
  47 -> {55};
  48 -> {49};
  49 -> {50};
  50 -> {51};
  51 -> {52};
  52 -> {53};
  53 -> {54};
  54 -> {55};
  55 -> {56};
  56 -> {57};
  57 -> {58};
  58 -> {59};

  subgraph cluster_15 {
    color=red
    60 [label="Enter function test_3" style="filled" fillcolor=red];
    61 [label="Access variable R|<local>/a|"];
    subgraph cluster_16 {
      color=blue
      62 [label="Enter function anonymousFunction"];
      63 [label="Access variable R|<local>/b|"];
      subgraph cluster_17 {
        color=blue
        64 [label="Enter function anonymousFunction"];
        65 [label="Access variable R|<local>/c|"];
        subgraph cluster_18 {
          color=blue
          66 [label="Enter function anonymousFunction"];
          67 [label="Access variable this@R|special/anonymous|"];
          68 [label="Type operator: this@wb as A"];
          69 [label="Access variable this@R|special/anonymous|"];
          70 [label="Function call: this@R|special/anonymous|.R|/A.foo|()"];
          71 [label="Function call: this@R|/A|.R|/A.foo|()"];
          72 [label="Exit function anonymousFunction"];
        }
        73 [label="Function call: R|kotlin/with|<R|kotlin/Any|, R|kotlin/Unit|>(R|<local>/c|, <L> = wc@fun R|kotlin/Any|.<anonymous>(): R|kotlin/Unit| <kind=EXACTLY_ONCE>  {
    (this@R|special/anonymous| as R|A|)
    this@R|special/anonymous|.R|/A.foo|()
    this@R|/A|.R|/A.foo|()
}
)"];
        74 [label="Access variable this@R|special/anonymous|"];
        75 [label="Function call: this@R|special/anonymous|.R|/A.foo|()"];
        76 [label="Function call: this@R|/A|.R|/A.foo|()"];
        77 [label="Exit function anonymousFunction"];
      }
      78 [label="Function call: R|kotlin/with|<R|kotlin/Any|, R|kotlin/Unit|>(R|<local>/b|, <L> = wb@fun R|kotlin/Any|.<anonymous>(): R|kotlin/Unit| <kind=EXACTLY_ONCE>  {
    R|kotlin/with|<R|kotlin/Any|, R|kotlin/Unit|>(R|<local>/c|, <L> = wc@fun R|kotlin/Any|.<anonymous>(): R|kotlin/Unit| <kind=EXACTLY_ONCE>  {
        (this@R|special/anonymous| as R|A|)
        this@R|special/anonymous|.R|/A.foo|()
        this@R|/A|.R|/A.foo|()
    }
    )
    this@R|special/anonymous|.R|/A.foo|()
    this@R|/A|.R|/A.foo|()
}
)"];
      79 [label="Exit function anonymousFunction"];
    }
    80 [label="Function call: R|kotlin/with|<R|kotlin/Any|, R|kotlin/Unit|>(R|<local>/a|, <L> = wa@fun R|kotlin/Any|.<anonymous>(): R|kotlin/Unit| <kind=EXACTLY_ONCE>  {
    R|kotlin/with|<R|kotlin/Any|, R|kotlin/Unit|>(R|<local>/b|, <L> = wb@fun R|kotlin/Any|.<anonymous>(): R|kotlin/Unit| <kind=EXACTLY_ONCE>  {
        R|kotlin/with|<R|kotlin/Any|, R|kotlin/Unit|>(R|<local>/c|, <L> = wc@fun R|kotlin/Any|.<anonymous>(): R|kotlin/Unit| <kind=EXACTLY_ONCE>  {
            (this@R|special/anonymous| as R|A|)
            this@R|special/anonymous|.R|/A.foo|()
            this@R|/A|.R|/A.foo|()
        }
        )
        this@R|special/anonymous|.R|/A.foo|()
        this@R|/A|.R|/A.foo|()
    }
    )
}
)"];
    81 [label="Exit function test_3" style="filled" fillcolor=red];
  }

  60 -> {61};
  61 -> {62};
  62 -> {63};
  63 -> {64};
  64 -> {65};
  65 -> {66};
  66 -> {67};
  67 -> {68};
  68 -> {69};
  69 -> {70};
  70 -> {71};
  71 -> {72};
  72 -> {73};
  73 -> {74};
  74 -> {75};
  75 -> {76};
  76 -> {77};
  77 -> {78};
  78 -> {79};
  79 -> {80};
  80 -> {81};

}
